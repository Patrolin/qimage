package windowsAlloc
import coreWin "core:sys/windows"

LPVOID :: coreWin.LPVOID
BOOL :: coreWin.BOOL

MEM_COMMIT :: coreWin.MEM_COMMIT
MEM_RESERVE :: coreWin.MEM_RESERVE
MEM_DECOMMIT :: coreWin.MEM_DECOMMIT
MEM_RELEASE :: coreWin.MEM_RELEASE
MEM_FREE :: coreWin.MEM_FREE
MEM_PRIVATE :: coreWin.MEM_PRIVATE
MEM_MAPPED :: coreWin.MEM_MAPPED
MEM_RESET :: coreWin.MEM_RESET
MEM_TOP_DOWN :: coreWin.MEM_TOP_DOWN
MEM_LARGE_PAGES :: coreWin.MEM_LARGE_PAGES
MEM_4MB_PAGES :: coreWin.MEM_4MB_PAGES

PAGE_NOACCESS :: coreWin.PAGE_NOACCESS
PAGE_READONLY :: coreWin.PAGE_READONLY
PAGE_READWRITE :: coreWin.PAGE_READWRITE
PAGE_WRITECOPY :: coreWin.PAGE_WRITECOPY
PAGE_EXECUTE :: coreWin.PAGE_EXECUTE
PAGE_EXECUTE_READ :: coreWin.PAGE_EXECUTE_READ
PAGE_EXECUTE_READWRITE :: coreWin.PAGE_EXECUTE_READWRITE
PAGE_EXECUTE_WRITECOPY :: coreWin.PAGE_EXECUTE_WRITECOPY
PAGE_GUARD :: coreWin.PAGE_GUARD
PAGE_NOCACHE :: coreWin.PAGE_NOCACHE
PAGE_WRITECOMBINE :: coreWin.PAGE_WRITECOMBINE

VirtualAlloc :: coreWin.VirtualAlloc
VirtualFree :: coreWin.VirtualFree

alloc :: proc(size: uint) -> LPVOID {
	return VirtualAlloc(nil, size, MEM_COMMIT, PAGE_READWRITE)
}
free :: proc(ptr: LPVOID) -> BOOL {
	return VirtualFree(ptr, 0, MEM_RELEASE)
}
